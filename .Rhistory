geom_point() +
labs( x = "Module 3 eigengenes", y = "VOV_1 load",
title ="VOV_1 load - Module 3 interaction") +
theme_bw() +
stat_cor()+
geom_smooth(method = "glm", se=FALSE)
# and the viruses against each other
pARV_2_VOV <- ggplot(dat,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
labs( x = "ARV_2 load", y = "VOV_1 load",
title ="ARV_2 - VOV_1 viral load interaction") +
theme_bw() +
stat_cor()+
geom_smooth(method = "glm", se=FALSE, col = "#23A242")
# plot the all viruses with module 13
grid.arrange(pARV_2_VOV, pBr_virus, nrow = 1)
grid.arrange(pARV_2_VOV,pBr_VOV_1, pBr_ARV_2 ,nrow = 1)
pBr_ARV_2 <- ggplot(dat,aes(x = MEbrown, y =ARV_2)) +
geom_point() +
labs( x = "Module 3 eigengenes", y = "ARV_2 load",
title ="ARV_2 load - Module 3 interaction") +
theme_bw() +
stat_cor()+
geom_smooth(method = "glm", se=T)
pBr_VOV_1 <- ggplot(dat,aes(x = MEbrown, y = VOV_1)) +
geom_point() +
labs( x = "Module 3 eigengenes", y = "VOV_1 load",
title ="VOV_1 load - Module 3 interaction") +
theme_bw() +
stat_cor()+
geom_smooth(method = "glm", se=T)
# and the viruses against each other
pARV_2_VOV <- ggplot(dat,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
labs( x = "ARV_2 load", y = "VOV_1 load",
title ="ARV_2 - VOV_1 viral load interaction") +
theme_bw() +
stat_cor()+
geom_smooth(method = "glm", se=T, col = "#23A242")
# plot the all viruses with module 13
grid.arrange(pARV_2_VOV, pBr_virus, nrow = 1)
grid.arrange(pARV_2_VOV,pBr_VOV_1, pBr_ARV_2 ,nrow = 1)
grid.arrange(pBr_VOV_1, pBr_ARV_2 ,nrow = 1)
pBr_VOV_1 <- ggplotly(dat,aes(x = MEbrown, y = VOV_1)) +
geom_point() +
labs( x = "Module 3 eigengenes", y = "VOV_1 load",
title ="VOV_1 load - Module 3 interaction") +
theme_bw() +
stat_cor()+
geom_smooth(method = "glm", se=T, col = "black")
library(ggplotly)
library(ggplotify)
# (1) Module 3 (Brown module) positively correlates to ARV_2, VOV_1. the 2 viruses are positively correlated.
Brown <- dat %>%
dplyr::select(c("library","MEbrown", "ARV_2", "VOV_1")) %>%
pivot_longer(cols = c(ARV_2, VOV_1),
names_to = "virus", values_to = "load")
# plot the eigengenes against the viral load
pBr_virus <- ggplot(Brown,aes(x = MEbrown, y = load, col = virus, group = virus)) +
geom_point() +
labs( x = "Module 3 eigengenes", y = "Viral load",
title ="Module 3 - ARV_2 and VOV_1 interaction") +
theme_bw() +
stat_cor(aes(color = virus))+
geom_smooth(method = "lm", se=T, col = "black")
pBr_ARV_2 <- ggplot(dat,aes(x = MEbrown, y =ARV_2)) +
geom_point() +
labs( x = "Module 3 eigengenes", y = "ARV_2 load",
title ="ARV_2 load - Module 3 interaction") +
theme_bw() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
pBr_VOV_1 <- ggplot(dat,aes(x = MEbrown, y = VOV_1)) +
geom_point() +
labs( x = "Module 3 eigengenes", y = "VOV_1 load",
title ="VOV_1 load - Module 3 interaction") +
theme_bw() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
# and the viruses against each other
pARV_2_VOV <- ggplot(dat,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
labs( x = "ARV_2 load", y = "VOV_1 load",
title ="ARV_2 - VOV_1 viral load interaction") +
theme_bw() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "#23A242")
# plot the all viruses with module 13
grid.arrange(pARV_2_VOV, pBr_virus, nrow = 1)
grid.arrange(pARV_2_VOV,pBr_VOV_1, pBr_ARV_2 ,nrow = 1)
# and the viruses against each other
pARV_2_VOV <- ggplot(dat,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
labs( x = "ARV_2 load", y = "VOV_1 load",
title ="ARV_2 - VOV_1 viral load interaction") +
theme_clean() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "#23A242")
# plot the all viruses with module 13
grid.arrange(pARV_2_VOV, pBr_virus, nrow = 1)
grid.arrange(pARV_2_VOV,pBr_VOV_1, pBr_ARV_2 ,nrow = 1)
# and the viruses against each other
pARV_2_VOV <- ggplot(dat,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
labs( x = "ARV_2 load", y = "VOV_1 load",
title ="ARV_2 - VOV_1 viral load interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "#23A242")
# plot the all viruses with module 13
grid.arrange(pARV_2_VOV, pBr_virus, nrow = 1)
grid.arrange(pARV_2_VOV,pBr_VOV_1, pBr_ARV_2 ,nrow = 1)
pBr_ARV_2 <- ggplot(dat,aes(x = MEbrown, y =ARV_2)) +
geom_point() +
labs( x = "Module 3 eigengenes", y = "ARV_2 load",
title ="ARV_2 load - Module 3 interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
pBr_VOV_1 <- ggplot(dat,aes(x = MEbrown, y = VOV_1)) +
geom_point() +
labs( x = "Module 3 eigengenes", y = "VOV_1 load",
title ="VOV_1 load - Module 3 interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
# and the viruses against each other
pARV_2_VOV <- ggplot(dat,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
labs( x = "ARV_2 load", y = "VOV_1 load",
title ="ARV_2 - VOV_1 viral load interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "#23A242")
# plot the all viruses with module 13
grid.arrange(pARV_2_VOV, pBr_virus, nrow = 1)
grid.arrange(pARV_2_VOV,pBr_VOV_1, pBr_ARV_2 ,nrow = 1)
b_viruses_load
dat
View(dat)
View(dat)
joined_virus_lib_PCA
autoplot(prcomp(dat), label = TRUE)
autoplot(prcomp(final_gene_tpm_T), label = TRUE)
View(final_gene_tpm_T)
autoplot(prcomp(t(dat)), label = TRUE)
t(dat)
autoplot(prcomp(column_to_rownames(dat, library), label = TRUE)
autoplot(prcomp(column_to_rownames(dat, library), label = TRUE))
autoplot(prcomp(column_to_rownames(dat), label = TRUE))
x <- column_to_rownames(dat)
x <- column_to_rownames(dat, "library")
View(x)
autoplot(prcomp(x, label = TRUE))
autoplot(prcomp(x$ARV_2, label = TRUE))
# take a look at the libraries
x <- column_to_rownames(dat, "library") %>%
select(ARV_2)
# take a look at the libraries
x <- column_to_rownames(dat, "library") %>%
dplyr::select(ARV_2)
autoplot(prcomp(xlabel = TRUE))
autoplot(prcomp(x,label = TRUE))
x
x <- column_to_rownames(dat, "library")
# take a look at the libraries
x <- column_to_rownames(dat, "library") %>%
dplyr::filter(!c("SRR5760848","SRR5760838", "SRR5760828", "SRR5760818", "SRR5377266", "SRR5377265"))
# take a look at the libraries
x <- column_to_rownames(dat, "library") %>%
filter(!(library %in% c"SRR5760848","SRR5760838", "SRR5760828", "SRR5760818", "SRR5377266", "SRR5377265"))
filter(!(library %in% c("SRR5760848","SRR5760838", "SRR5760828", "SRR5760818", "SRR5377266", "SRR5377265"))
# take a look at the libraries
x <- column_to_rownames(dat, "library") %>%
x <- column_to_rownames(dat, "library") %>%
filter(!(library %in% c("SRR5760848","SRR5760838", "SRR5760828", "SRR5760818", "SRR5377266", "SRR5377265"))
# take a look at the libraries
x <- column_to_rownames(dat, "library") %>%
filter(!(library %in% c("SRR5760848","SRR5760838", "SRR5760828", "SRR5760818", "SRR5377266", "SRR5377265")))
x <- column_to_rownames(dat, "library") %>%
dplyr::filter(!(library %in% c("SRR5760848","SRR5760838", "SRR5760828", "SRR5760818", "SRR5377266", "SRR5377265")))
dat
<- column_to_rownames(dat, "library")
x <- column_to_rownames(dat, "library")
x <- dat %>%
dplyr::filter(!(library %in% c("SRR5760848","SRR5760838", "SRR5760828", "SRR5760818", "SRR5377266", "SRR5377265")))
Brown
# plot the eigengenes against the viral load
pBr_virus <- ggplot(x,aes(x = MEbrown, y = load, col = virus, group = virus)) +
geom_point() +
labs( x = "Module 3 eigengenes", y = "Viral load",
title ="Module 3 - ARV_2 and VOV_1 interaction") +
theme_bw() +
stat_cor(aes(color = virus))+
geom_smooth(method = "lm", se=T, col = "black")
pBr_ARV_2 <- ggplot(x,aes(x = MEbrown, y =ARV_2)) +
geom_point() +
labs( x = "Module 3 eigengenes", y = "ARV_2 load",
title ="ARV_2 load - Module 3 interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
pBr_VOV_1 <- ggplot(x,aes(x = MEbrown, y = VOV_1)) +
geom_point() +
labs( x = "Module 3 eigengenes", y = "VOV_1 load",
title ="VOV_1 load - Module 3 interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
# and the viruses against each other
pARV_2_VOV <- ggplot(x,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
labs( x = "ARV_2 load", y = "VOV_1 load",
title ="ARV_2 - VOV_1 viral load interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "#23A242")
# plot the all viruses with module 13
grid.arrange(pARV_2_VOV, pBr_virus, nrow = 1)
grid.arrange(pARV_2_VOV,pBr_VOV_1, pBr_ARV_2 ,nrow = 1)
# plot the eigengenes against the viral load
pBr_virus <- ggplot(Brown,aes(x = MEbrown, y = load, col = virus, group = virus)) +
geom_point() +
labs( x = "Module 3 eigengenes", y = "Viral load",
title ="Module 3 - ARV_2 and VOV_1 interaction") +
theme_bw() +
stat_cor(aes(color = virus))+
geom_smooth(method = "lm", se=T, col = "black")
pBr_ARV_2 <- ggplot(dat,aes(x = MEbrown, y =ARV_2)) +
geom_point() +
labs( x = "Module 3 eigengenes", y = "ARV_2 load",
title ="ARV_2 load - Module 3 interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
pBr_VOV_1 <- ggplot(dat,aes(x = MEbrown, y = VOV_1)) +
geom_point() +
labs( x = "Module 3 eigengenes", y = "VOV_1 load",
title ="VOV_1 load - Module 3 interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
# and the viruses against each other
pARV_2_VOV <- ggplot(dat,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
labs( x = "ARV_2 load", y = "VOV_1 load",
title ="ARV_2 - VOV_1 viral load interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "#23A242")
# plot the all viruses with module 13
grid.arrange(pARV_2_VOV, pBr_virus, nrow = 1)
grid.arrange(pARV_2_VOV,pBr_VOV_1, pBr_ARV_2 ,nrow = 1)
# and the viruses against each other
pARV_2_VOV <- ggplot(dat,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
geom_text(nudge_x = 0.25, nudge_y = 0.25,check_overlap = T)
# and the viruses against each other
pARV_2_VOV <- ggplot(dat,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
geom_text(nudge_x = 0.25, nudge_y = 0.25,check_overlap = T)+
labs( x = "ARV_2 load", y = "VOV_1 load",
title ="ARV_2 - VOV_1 viral load interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "#23A242")
pARV_2_VOV
# and the viruses against each other
pARV_2_VOV <- ggplot(dat,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
geom_text(label="library", nudge_x = 0.25, nudge_y = 0.25,check_overlap = T)
# and the viruses against each other
pARV_2_VOV <- ggplot(dat,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
geom_text(label="library", nudge_x = 0.25, nudge_y = 0.25,check_overlap = T)+
labs( x = "ARV_2 load", y = "VOV_1 load",
title ="ARV_2 - VOV_1 viral load interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "#23A242")
pARV_2_VOV
# and the viruses against each other
pARV_2_VOV <- ggplot(dat,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
geom_text(label= dat$library, nudge_x = 0.25, nudge_y = 0.25,check_overlap = T)+
labs( x = "ARV_2 load", y = "VOV_1 load",
title ="ARV_2 - VOV_1 viral load interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "#23A242")
pARV_2_VOV
# plot the eigengenes against the viral load
pBr_virus <- ggplot(Brown,aes(x = MEbrown, y = load, col = virus, group = virus)) +
geom_point() +
labs( x = "Module 3 eigengenes", y = "Viral load",
title ="Module 3 - ARV_2 and VOV_1 interaction") +
theme_bw() +
geom_text(label= dat$library, nudge_x = 0.25, nudge_y = 0.25,check_overlap = T)+
stat_cor(aes(color = virus))+
geom_smooth(method = "lm", se=T, col = "black")
pBr_ARV_2 <- ggplot(dat,aes(x = MEbrown, y =ARV_2)) +
geom_point() +
geom_text(label= dat$library, nudge_x = 0.25, nudge_y = 0.25,check_overlap = T)+
labs( x = "Module 3 eigengenes", y = "ARV_2 load",
title ="ARV_2 load - Module 3 interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
pBr_VOV_1 <- ggplot(dat,aes(x = MEbrown, y = VOV_1)) +
geom_point() +
geom_text(label= dat$library, nudge_x = 0.25, nudge_y = 0.25,check_overlap = T)+
labs( x = "Module 3 eigengenes", y = "VOV_1 load",
title ="VOV_1 load - Module 3 interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
# and the viruses against each other
pARV_2_VOV <- ggplot(dat,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
geom_text(label= dat$library, nudge_x = 0.25, nudge_y = 0.25,check_overlap = T)+
labs( x = "ARV_2 load", y = "VOV_1 load",
title ="ARV_2 - VOV_1 viral load interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "#23A242")
# plot the all viruses with module 13
grid.arrange(pARV_2_VOV, pBr_virus, nrow = 1)
grid.arrange(pARV_2_VOV,pBr_VOV_1, pBr_ARV_2 ,nrow = 1)
# Module 3 (Brown module) positively correlates to ARV_2, VOV_1. the 2 viruses are positively correlated.
pBr_ARV_2 <- ggplot(x,aes(x = MEbrown, y =ARV_2)) +
geom_point() +
geom_text(label= x$library, nudge_x = 0.25, nudge_y = 0.25,check_overlap = T)+
labs( x = "Module 3 eigengenes", y = "ARV_2 load",
title ="ARV_2 load - Module 3 interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
pBr_VOV_1 <- ggplot(x,aes(x = MEbrown, y = VOV_1)) +
geom_point() +
geom_text(label= x$library, nudge_x = 0.25, nudge_y = 0.25,check_overlap = T)+
labs( x = "Module 3 eigengenes", y = "VOV_1 load",
title ="VOV_1 load - Module 3 interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
# and the viruses against each other
pARV_2_VOV <- ggplot(x,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
geom_text(label= x$library, nudge_x = 0.25, nudge_y = 0.25,check_overlap = T)+
labs( x = "ARV_2 load", y = "VOV_1 load",
title ="ARV_2 - VOV_1 viral load interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "#23A242")
# plot the all viruses with module 13
grid.arrange(pARV_2_VOV, pBr_virus, nrow = 1)
grid.arrange(pARV_2_VOV,pBr_VOV_1, pBr_ARV_2 ,nrow = 1)
pARV_2_VOV
pBr_VOV_1
pBr_VOV_1 <- ggplot(x,aes(x = MEbrown, y = VOV_1)) +
geom_point() +
geom_text(label= x$library, check_overlap = T)+
labs( x = "Module 3 eigengenes", y = "VOV_1 load",
title ="VOV_1 load - Module 3 interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
pBr_VOV_1
nudge_x = 0.25, nudge_y = 0.25,
# and the viruses against each other
pARV_2_VOV <- ggplot(x,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
geom_text(label= x$library,check_overlap = T)+
labs( x = "ARV_2 load", y = "VOV_1 load",
title ="ARV_2 - VOV_1 viral load interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "#23A242")
pARV_2_VOV
# Module 3 (Brown module) positively correlates to ARV_2, VOV_1. the 2 viruses are positively correlated.
Brown <- dat %>%
dplyr::select(c("library","MEbrown", "ARV_2", "VOV_1")) %>%
pivot_longer(cols = c(ARV_2, VOV_1),
names_to = "virus", values_to = "load")
# plot the eigengenes against the viral load
pBr_virus <- ggplot(Brown,aes(x = MEbrown, y = load, col = virus, group = virus)) +
geom_point() +
labs( x = "Module 3 eigengenes", y = "Viral load",
title ="Module 3 - ARV_2 and VOV_1 interaction") +
theme_bw() +
geom_text(label= dat$library, check_overlap = T)+
stat_cor(aes(color = virus))+
geom_smooth(method = "lm", se=T, col = "black")
pBr_ARV_2 <- ggplot(dat,aes(x = MEbrown, y =ARV_2)) +
geom_point() +
geom_text(label= dat$library, check_overlap = T)+
labs( x = "Module 3 eigengenes", y = "ARV_2 load",
title ="ARV_2 load - Module 3 interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
pBr_VOV_1 <- ggplot(dat,aes(x = MEbrown, y = VOV_1)) +
geom_point() +
geom_text(label= dat$library,check_overlap = T)+
labs( x = "Module 3 eigengenes", y = "VOV_1 load",
title ="VOV_1 load - Module 3 interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
# and the viruses against each other
pARV_2_VOV <- ggplot(dat,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
geom_text(label= dat$library,check_overlap = T)+
labs( x = "ARV_2 load", y = "VOV_1 load",
title ="ARV_2 - VOV_1 viral load interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "#23A242")
# plot the all viruses with module 13
grid.arrange(pARV_2_VOV, pBr_virus, nrow = 1)
grid.arrange(pARV_2_VOV,pBr_VOV_1, pBr_ARV_2 ,nrow = 1)
# Module 3 (Brown module) positively correlates to ARV_2, VOV_1. the 2 viruses are positively correlated.
pBr_ARV_2 <- ggplot(x,aes(x = MEbrown, y =ARV_2)) +
geom_point() +
geom_text(label= x$library, check_overlap = T)+
labs( x = "Module 3 eigengenes", y = "ARV_2 load",
title ="ARV_2 load - Module 3 interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
pBr_VOV_1 <- ggplot(x,aes(x = MEbrown, y = VOV_1)) +
geom_point() +
geom_text(label= x$library, check_overlap = T)+
labs( x = "Module 3 eigengenes", y = "VOV_1 load",
title ="VOV_1 load - Module 3 interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "black")
# and the viruses against each other
pARV_2_VOV <- ggplot(x,aes(x = ARV_2, y = VOV_1)) +
geom_point() +
geom_text(label= x$library,check_overlap = T)+
labs( x = "ARV_2 load", y = "VOV_1 load",
title ="ARV_2 - VOV_1 viral load interaction") +
theme_classic() +
stat_cor()+
geom_smooth(method = "lm", se=T, col = "#23A242")
# plot the all viruses with module 13
grid.arrange(pARV_2_VOV, pBr_virus, nrow = 1)
grid.arrange(pARV_2_VOV,pBr_VOV_1, pBr_ARV_2 ,nrow = 1)
#remove libraries (by col):
# 5 outlier libraries ("SRR5109825", "SRR5109827", "SRR533974" , "SRR3927496", "SRR8867385")
# and 9 non-adult female libraries (SRR5760848, SRR5760838, SRR5760828, SRR5760818, SRR5377265 ,SRR5377270 ,SRR5377269 ,SRR5377263 ,SRR5377266)
# we are left with 57 libraries of female mites.
for_modules_female <- final_gene_tpm %>%
dplyr::select(-c("SRR5760848", "SRR5760838", "SRR5760828", "SRR5760818", "SRR5377265" ,"SRR5377270" ,"SRR5377269" ,"SRR5377263" ,"SRR5377266")) %>%
transposeBigData()
#plot PCA, detect outlier libraries
autoplot(prcomp(for_modules_female), label = TRUE)+
ggtitle("57 libraries")
saveRDS(for_modules_female, file = "/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/for_modules_female.rds")
# If necessary, change the path below to the directory where the data files are stored.
setwd("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks")
# Display the current working directory
getwd()
# Allow multi-threading within WGCNA. This helps speed up certain calculations.
options(stringsAsFactors = FALSE)
# Choose a set of soft-thresholding powers
powers = c(c(1:10), seq(from = 12, to=25, by=2))
# Call the network topology analysis function
sft = pickSoftThreshold(for_modules_female, powerVector = powers, verbose = 5)
# Plot the results:
sizeGrWindow(9, 5)
par(mfrow = c(1,2));
# Plot the results:
sizeGrWindow(9, 5)
par(mfrow = c(1,2));
cex1 = 0.9;
# Scale-free topology fit index as a function of the soft-thresholding power
plot(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],
xlab="Soft Threshold (power)",ylab="Scale Free Topology Model Fit,signed R^2",type="n",
main = paste("Scale independence"));
text(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],
labels=powers,cex=cex1,col="red");
# this line corresponds to using an R^2 cut-off of h
abline(h=0.80,col="red")
# Mean connectivity as a function of the soft-thresholding power
plot(sft$fitIndices[,1], sft$fitIndices[,5],
xlab="Soft Threshold (power)",ylab="Mean Connectivity", type="n",
main = paste("Mean connectivity"))
text(sft$fitIndices[,1], sft$fitIndices[,5], labels=powers, cex=cex1,col="red")
# Choose a set of soft-thresholding powers
powers = c(c(1:10), seq(from = 12, to=25, by=2))
# Call the network topology analysis function
sft = pickSoftThreshold(for_modules, powerVector = powers, verbose = 5)
# Plot the results:
sizeGrWindow(9, 5)
par(mfrow = c(1,2));
cex1 = 0.9;
# Scale-free topology fit index as a function of the soft-thresholding power
plot(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],
xlab="Soft Threshold (power)",ylab="Scale Free Topology Model Fit,signed R^2",type="n",
main = paste("Scale independence"));
text(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],
labels=powers,cex=cex1,col="red");
# this line corresponds to using an R^2 cut-off of h
abline(h=0.80,col="red")
# Mean connectivity as a function of the soft-thresholding power
plot(sft$fitIndices[,1], sft$fitIndices[,5],
xlab="Soft Threshold (power)",ylab="Mean Connectivity", type="n",
main = paste("Mean connectivity"))
text(sft$fitIndices[,1], sft$fitIndices[,5], labels=powers, cex=cex1,col="red")
