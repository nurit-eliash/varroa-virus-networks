names <- load(file = "/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/IntraModCon57.RData")
names
names <- load(file = "/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/geneTraitANDgeneMM_57.RData")
names
#load the genes tpm per library, and viral load:
names <- load(file = "/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/varroa_virus-01-dataInput_57.RData")
names
#load the correlation data for the module-trait relationship:
names <- load("/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/moduleTraitCor_57.RData")
names
# overlap the two modules tables, to check if the modules contain the same genes
# to avoid confusion, i used the module colors for the 66 libs ("moduleColors" 15 modules + grey=genes with no module), and the modules numbers for the 57 libs ("moduleLabels_57" 14 modules + "zero" = genes with no module):
compareModules <- overlapTable(
moduleColors, moduleLabels_57,
na.rm = FALSE, ignore = NULL,
levels1 = NULL, levels2 = NULL)
compareModules
geneInfoMagenta_66 = data.frame(
module = moduleColors,
geneTraitSignificance_66,
geneModuleMembership_66,
IntraModCon = Alldegrees1_66$kWithin) %>%
dplyr::select(c(module, IntraModCon, MMmagenta, GS.DWVa, GS.VDV2, GS.ARV_2)) %>%
dplyr::filter(module == "magenta") %>%
rownames_to_column("genes")
geneInfoBlack_57 = data.frame(
module = moduleColors_57,
geneTraitSignificance_57,
geneModuleMembership_57,
IntraModCon = Alldegrees1_57$kWithin) %>%
dplyr::select(c(module, IntraModCon, MMblack, GS.DWVa, GS.VDV2, GS.ARV_2)) %>%
dplyr::filter(module%in% c("black")) %>%
rownames_to_column("genes")
# make a table of the overlapping genes
overlap <- inner_join(geneInfoMagenta_66, geneInfoBlack_57, by = "genes")
#change the columns names to specify from which analysis it was taken (66libs or 57libs)
overlap <- overlap %>%
dplyr::rename(module_66 = module.x,
module_57 = module.y,
IntraModCon_66 = IntraModCon.x,
IntraModCon_57 = IntraModCon.y,
GS.DWVa_66 = GS.DWVa.x,
GS.DWVa_57 = GS.DWVa.y,
GS.VDV2_66 = GS.VDV2.x,
GS.VDV2_57 = GS.VDV2.y,
GS.ARV_2_66 = GS.ARV_2.x,
GS.ARV_2_57 = GS.ARV_2.y)
nrow(overlap)
overlap
# we have 40 overlapping genes in the magenat and balck modules, as the "overlapTable()" function computed.
# add gene annotation:
# load the annotation file:
annot_varroa <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/data/annot_varroa.csv", col_names = TRUE, )
# remove the "LOC" from the gene name
annot_varroa$Locus <- str_replace(annot_varroa$Locus, "LOC", '')
# and change the col name to "genes", so it will the same as in the "overlap" table
colnames(annot_varroa)[which(names(annot_varroa) == "Locus")] <- "genes"
head(annot_varroa)
#now join by "genes" name (INNER JOIN: returns rows when there is a match in both tables)
overlap_annot <- inner_join(overlap, annot_varroa, by = "genes") %>%
dplyr::select(c(genes, module_66, module_57,
IntraModCon_66,
IntraModCon_57,
GS.DWVa_66,
GS.DWVa_57,
GS.VDV2_66,
GS.VDV2_57,
GS.ARV_2_66,
GS.ARV_2_57, Name, Accession, 'Protein product', Length, 'Protein Name'))
# and filter out duplicated genes
overlap_annot <-overlap_annot[!duplicated(overlap_annot[,'genes']),]
nrow(overlap_annot)
write_csv(x = as.data.frame(overlap_annot), "results/overlap_annot.csv")
#load the former hub-genes:
hub_old <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/data/hub_annot_old.csv", col_names = TRUE, )
hub_old$genes <- as.character(hub_old$genes)
# how many of the hub_old genes exist in the magenta module?
#return all rows from x, and all columns from x and y.
f <- left_join(geneInfoMagenta_66, hub_old, by = "genes")
sum(!is.na(f$virus.x))
# only 3 genes of magenta module appear in the former hubgene. analysis
# so to what module these 53-hubgenes belong to?
#make a data.frame of all genes with modules:
all.genes.66 <- data.frame(
module = moduleColors,
geneTraitSignificance_66,
GSPadjust_66,
geneModuleMembership_66,
MMPadjust_66,
IntraModCon = Alldegrees1_66$kWithin) %>%
dplyr::select(c(module, IntraModCon, GS.DWVa, pdj.GS.DWVa, GS.VDV2, pdj.GS.VDV2, GS.ARV_2, pdj.GS.ARV_2, MMpurple, padj.MMpurple, MMpink, padj.MMpink)) %>%
rownames_to_column("genes")
left_join(hub_old, all.genes.66, by = "genes")
# in the 66 libs, most of them belong to the purple module
all.genes.57 <- data.frame(
module = moduleColors_57,
geneTraitSignificance_57,
GSPadjust_57,
geneModuleMembership_57,
MMPadjust_57,
IntraModCon = Alldegrees1_57$kWithin) %>%
dplyr::select(c(module, IntraModCon, GS.DWVa, pdj.GS.DWVa, GS.VDV2, pdj.GS.VDV2, GS.ARV_2, pdj.GS.ARV_2, MMsalmon, padj.MMsalmon)) %>%
rownames_to_column("genes")
left_join(hub_old, all.genes.57, by = "genes")
# in the 57 libs, most belong to the salmon module.
# what about the silenced genes? to which module they belong to?
# prepare a table describing each gene number, short-name and full annotation, of the silenced genes:
genes <- as.factor(c("111250594", "111244103","111244832", "111248360", "111245345", "111248674", "111251059", "111245371", "111244631", "111252566", "111249664"))
annot <- as.factor(c("Sarcalumenin", "glycerol-3-phosphate dehydrogenase", "Calmodulin", "Cuticle-protein8","Cuticle-protein-14", "Glutamate-receptor-3", "Glutamate-gated-chloride-channel-subunit-beta", "Organic-cation-transporter-protein", "Twitchin", "Annulin", "Defense-protein-Hdd11"))
ShortName <- as.factor(c("Sar", "Gly","clmd", "CuP8", "CuP14", "Glut", "Chl", "Trans", "Twitch", "Anl", "HDD"))
silenced.genes <- data.frame(genes, ShortName, annot)
# to what module the silenced genes belong to?
silenced_overlap.66 <- left_join(silenced.genes, all.genes.66, by = "genes")
silenced_overlap.57 <- left_join(silenced.genes, all.genes.57, by = "genes")
# of the 11 genes, 8 belong to purple module, 2 to pink and 1 to green.
# all have negative interaction with DWVa.
silenced_overlap.57
#load the former hub-genes:
hub_old <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/data/hub_annot_old.csv", col_names = TRUE, )
hub_old$genes <- as.character(hub_old$genes)
# how many of the hub_old genes exist in the magenta module?
#return all rows from x, and all columns from x and y.
f <- left_join(geneInfoMagenta_66, hub_old, by = "genes")
sum(!is.na(f$virus.x))
# only 3 genes of magenta module appear in the former hubgene. analysis
# so to what module these 53-hubgenes belong to?
#make a data.frame of all genes with modules:
all.genes.66 <- data.frame(
module = moduleColors,
geneTraitSignificance_66,
GSPadjust_66,
geneModuleMembership_66,
MMPadjust_66,
IntraModCon = Alldegrees1_66$kWithin) %>%
dplyr::select(c(module, IntraModCon, GS.DWVa, pdj.GS.DWVa, GS.VDV2, pdj.GS.VDV2, GS.ARV_2, pdj.GS.ARV_2, MMpurple, padj.MMpurple, MMpink, padj.MMpink)) %>%
rownames_to_column("genes")
left_join(hub_old, all.genes.66, by = "genes")
# in the 66 libs, most of them belong to the purple module
all.genes.57 <- data.frame(
module = moduleColors_57,
geneTraitSignificance_57,
GSPadjust_57,
geneModuleMembership_57,
MMPadjust_57,
IntraModCon = Alldegrees1_57$kWithin) %>%
dplyr::select(c(module, IntraModCon, GS.DWVa, pdj.GS.DWVa, GS.VDV2, pdj.GS.VDV2, GS.ARV_2, pdj.GS.ARV_2, MMsalmon, padj.MMsalmon)) %>%
rownames_to_column("genes")
left_join(hub_old, all.genes.57, by = "genes")
# in the 57 libs, most belong to the salmon module.
# what about the silenced genes? to which module they belong to?
# prepare a table describing each gene number, short-name and full annotation, of the silenced genes:
genes <- as.factor(c("111250594", "111244103","111244832", "111248360", "111245345", "111248674", "111251059", "111245371", "111244631", "111252566", "111249664"))
annot <- as.factor(c("Sarcalumenin", "glycerol-3-phosphate dehydrogenase", "Calmodulin", "Cuticle-protein8","Cuticle-protein-14", "Glutamate-receptor-3", "Glutamate-gated-chloride-channel-subunit-beta", "Organic-cation-transporter-protein", "Twitchin", "Annulin", "Defense-protein-Hdd11"))
ShortName <- as.factor(c("Sar", "Gly","clmd", "CuP8", "CuP14", "Glut", "Chl", "Trans", "Twitch", "Anl", "HDD"))
silenced.genes <- data.frame(genes, ShortName, annot)
# to what module the silenced genes belong to?
silenced_overlap.66 <- left_join(silenced.genes, all.genes.66, by = "genes")
silenced_overlap.57 <- left_join(silenced.genes, all.genes.57, by = "genes")
silenced_overlap.66
silenced_overlap.57
# of the 11 genes, 8 belong to purple module, 2 to pink and 1 to green.
# all have negative interaction with DWVa.
# how many genes overlap between Magenta module of the 66 libs, and the Black module of the 57 modules?
nrow(overlap_annot)
#transpose final_gene_tpm, and transform (log10+0.000001)
final_gene_tpm_T<- transposeBigData(log10(final_gene_tpm + 0.000001))
#plot PCA, detect outlier libraries
autoplot(prcomp(final_gene_tpm_T), label = TRUE)
#remove outlier libraries (by col)
for_modules <- final_gene_tpm %>% transposeBigData()
#%>% dplyr::select(-c("SRR5109825", "SRR5109827", "SRR533974" , "SRR3927496", "SRR8867385"))
saveRDS(for_modules, file = "/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/for_modules.rds")
#OPTIONAL
#remove outlier libraries + significant interacting libraries (17), from the "module-covariate-reg" analysis
#sig_lib_17 <- c("SRR6823684", "SRR6824277", "SRR5760848","SRR5760838", "SRR5760828", "SRR5760818","SRR5377265", "SRR7339931","SRR5377270", "SRR5377269", "SRR5377268","SRR5377267",  "SRR5377266", "SRR5377265","SRR5377264","SRR5377263","SRR8864012")
#for_modules_49 <- final_gene_tpm %>% dplyr::select(-c("SRR5109825", "SRR5109827", "SRR533974" , "SRR3927496", "SRR8867385", "SRR6823684", "SRR6824277", "SRR5760848","SRR5760838", "SRR5760828", "SRR5760818","SRR5377265", "SRR7339931","SRR5377270", "SRR5377269", "SRR5377268","SRR5377267",  "SRR5377266", "SRR5377265","SRR5377264","SRR5377263","SRR8864012")) %>%transposeBigData()
#plot PCA - the reduced file
#autoplot(prcomp(transposeBigData(log10(for_modules + 0.000001))), label = TRUE)
library(dplyr)
library(tidyverse)
library(vegan)
library(DESeq2)
library(ggfortify)
library(WGCNA)
library(rmarkdown)
library("knitr") # for the markdown
library("kableExtra") # for creating a scrolling table
library("ggplot2") # for plotting
library("ape") # for reading the phylogenetic tree and for mantel.test
library("Biostrings")
library("ggtree") # for plotting the tree
library("ggrepel") # for spreading text labels on the plot
library("scales") # for axis labels notation
library("GO.db")
library("reshape2")
library("RSQLite")
library("AnnotationDbi")
library("GSEABase")
library("GOstats")
library("maps") # for the map background
library("leaflet") #for the interactive maps
library("htmltools")
library("rgdal")
library("grid")
library("gridExtra")
library("GeneOverlap")
library(cluster)
library(WGCNA)
library("dplyr")
library("tidyverse")
library("vegan")
library("DESeq2")
library("ggfortify")
library("WGCNA")
library("rmarkdown")
library("knitr") # for the markdown
library("kableExtra") # for creating a scrolling table
library("ggplot2") # for plotting
library("ape") # for reading the phylogenetic tree and for mantel.test
library("Biostrings")
library("ggtree") # for plotting the tree
library("ggrepel") # for spreading text labels on the plot
library("scales") # for axis labels notation
library("GO.db")
library("reshape2")
library("RSQLite")
library("AnnotationDbi")
library("GSEABase")
library("GOstats")
library("maps") # for the map background
library("leaflet") #for the interactive maps
library("htmltools")
library("rgdal")
library("grid")
library("gridExtra")
library("GeneOverlap")
library(cluster)
#transpose final_gene_tpm, and transform (log10+0.000001)
final_gene_tpm_T<- transposeBigData(log10(final_gene_tpm + 0.000001))
#import the varroa transcripts ("target_id") and their corresponding gene ("gene_id"). and add a col names.
varroa_isoforms <- read_tsv("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/data/gene2isoform.txt.gz", col_names = c("gene_id", "target_id"))
#import the SRR libraries with tpms
df <- read_rds("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/data/kallisto.rds")
#join the varroa trascnripts(varroa_isoforms), and the library tpm (df), by the varroa genes ("traget_id")
gene_tpm <-  left_join(varroa_isoforms, df, by = "target_id")
#collapse isoforms to a single row of a gene, and sum the tpm(s) per gene per library
gene_tpm_collps <- gene_tpm %>% gather("library","tpm", -target_id, -gene_id) %>%
group_by(gene_id, library) %>% summarise(gene_tpm = sum(tpm))
# spread the table again, by library
final_gene_tpm <- spread(gene_tpm_collps, key = "library", value = "gene_tpm") %>% column_to_rownames('gene_id')
save(final_gene_tpm, file = "/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/gene_tpm.RData")
#this analysis is on the 66 and the 57 libraries
#the working directory is in GitHb:
setwd("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks")
#I save all the big outputs results in my local storage, on OneDrive:
"/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results"
knitr::opts_chunk$set(echo = TRUE)
library("dplyr")
library("tidyverse")
library("vegan")
library("DESeq2")
library("ggfortify")
library("WGCNA")
library("rmarkdown")
library("knitr") # for the markdown
library("kableExtra") # for creating a scrolling table
library("ggplot2") # for plotting
library("ape") # for reading the phylogenetic tree and for mantel.test
library("Biostrings")
library("ggtree") # for plotting the tree
library("ggrepel") # for spreading text labels on the plot
library("scales") # for axis labels notation
library("GO.db")
library("reshape2")
library("RSQLite")
library("AnnotationDbi")
library("GSEABase")
library("GOstats")
library("maps") # for the map background
library("leaflet") #for the interactive maps
library("htmltools")
library("rgdal")
library("grid")
library("gridExtra")
library("GeneOverlap")
library(cluster)
#transpose final_gene_tpm, and transform (log10+0.000001)
final_gene_tpm_T<- transposeBigData(log10(final_gene_tpm + 0.000001))
#plot PCA, detect outlier libraries
autoplot(prcomp(final_gene_tpm_T), label = TRUE)
#remove outlier libraries (by col)
for_modules <- final_gene_tpm %>% transposeBigData()
saveRDS(for_modules, file = "/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/for_modules.rds")
saveRDS(for_modules, file = "/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/for_modules.rds")
df
View(df)
library("dplyr")
library("tidyverse")
library("vegan")
library("DESeq2")
library("ggfortify")
library("WGCNA")
library("rmarkdown")
library("knitr") # for the markdown
library("kableExtra") # for creating a scrolling table
library("ggplot2") # for plotting
library("ape") # for reading the phylogenetic tree and for mantel.test
library("Biostrings")
library("ggtree") # for plotting the tree
library("ggrepel") # for spreading text labels on the plot
library("scales") # for axis labels notation
library("GO.db")
library("reshape2")
library("RSQLite")
library("AnnotationDbi")
library("GSEABase")
library("GOstats")
library("maps") # for the map background
library("leaflet") #for the interactive maps
library("htmltools")
library("rgdal")
library("grid")
library("gridExtra")
library("GeneOverlap")
library("cluster")
library("rmdformats")
knitr::opts_chunk$set(echo = TRUE)
corrplot
corrplot
library("corrplot")
#the working directory is in GitHb:
setwd("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks")
#I save all the big outputs results in my local storage, on OneDrive:
"/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results"
knitr::opts_chunk$set(echo = TRUE)
# load library
library("dplyr")
library("tidyverse")
library("vegan")
library("DESeq2")
library("ggfortify")
library("WGCNA")
library("rmarkdown")
library("knitr") # for the markdown
library("kableExtra") # for creating a scrolling table
library("ggplot2") # for plotting
library("ape") # for reading the phylogenetic tree and for mantel.test
library("Biostrings")
library("ggtree") # for plotting the tree
library("ggrepel") # for spreading text labels on the plot
library("scales") # for axis labels notation
library("GO.db")
library("reshape2")
library("RSQLite")
library("AnnotationDbi")
library("GSEABase")
library("GOstats")
library("maps") # for the map background
library("leaflet") #for the interactive maps
library("htmltools")
library("rgdal")
library("grid")
library("gridExtra")
library("GeneOverlap")
library("cluster")
library("ggpmisc")
library("DEGreport")
# load the module network, gene expression and viral load data of the 66 libraries analysis:
names <- load("/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/Varroa_modules_networkConstruction-auto.RData")
names
#load geneTraitSignificance (geneTraitSignificance), module membership (geneModuleMembership) and intramodular connectivity (Alldegrees1) for each gene:
names <- load(file = "/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/IntraModCon66.RData")
names
names <- load(file = "/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/geneTraitANDgeneMM_66.RData")
names
#load the genes tpm per library, and viral load:
names <- load(file = "/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/varroa_virus-01-dataInput.RData")
names
#load the correlation data for the module-trait relationship:
names <- load("/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/moduleTraitCor_66.RData")
names
# and of the 57 libraries analysis:
names <- load("/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/Varroa_modules_networkConstruction-auto_57.RData")
names
names <- load(file = "/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/IntraModCon57.RData")
names
names <- load(file = "/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/geneTraitANDgeneMM_57.RData")
names
#load the genes tpm per library, and viral load:
names <- load(file = "/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/varroa_virus-01-dataInput_57.RData")
names
#load the correlation data for the module-trait relationship:
names <- load("/Users/nuriteliash/OneDrive - OIST/Repos/varroa-virus-networks-Local/results/moduleTraitCor_57.RData")
names
# overlap the two modules tables, to check if the modules contain the same genes
# to avoid confusion, i used the module colors for the 66 libs ("moduleColors" 15 modules + grey=genes with no module), and the modules numbers for the 57 libs ("moduleLabels_57" 14 modules + "zero" = genes with no module):
compareModules <- overlapTable(
moduleColors, moduleLabels_57,
na.rm = FALSE, ignore = NULL,
levels1 = NULL, levels2 = NULL)
compareModules
geneInfoMagenta_66 = data.frame(
module = moduleColors,
geneTraitSignificance_66,
geneModuleMembership_66,
IntraModCon = Alldegrees1_66$kWithin) %>%
dplyr::select(c(module, IntraModCon, MMmagenta, GS.DWVa, GS.VDV2, GS.ARV_2)) %>%
dplyr::filter(module == "magenta") %>%
rownames_to_column("genes")
geneInfoBlack_57 = data.frame(
module = moduleColors_57,
geneTraitSignificance_57,
geneModuleMembership_57,
IntraModCon = Alldegrees1_57$kWithin) %>%
dplyr::select(c(module, IntraModCon, MMblack, GS.DWVa, GS.VDV2, GS.ARV_2)) %>%
dplyr::filter(module%in% c("black")) %>%
rownames_to_column("genes")
# make a table of the overlapping genes
overlap <- inner_join(geneInfoMagenta_66, geneInfoBlack_57, by = "genes")
#change the columns names to specify from which analysis it was taken (66libs or 57libs)
overlap <- overlap %>%
dplyr::rename(module_66 = module.x,
module_57 = module.y,
IntraModCon_66 = IntraModCon.x,
IntraModCon_57 = IntraModCon.y,
GS.DWVa_66 = GS.DWVa.x,
GS.DWVa_57 = GS.DWVa.y,
GS.VDV2_66 = GS.VDV2.x,
GS.VDV2_57 = GS.VDV2.y,
GS.ARV_2_66 = GS.ARV_2.x,
GS.ARV_2_57 = GS.ARV_2.y)
nrow(overlap)
overlap
# we have 40 overlapping genes in the magenat and balck modules, as the "overlapTable()" function computed.
# add gene annotation:
# load the annotation file:
annot_varroa <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/data/annot_varroa.csv", col_names = TRUE, )
# remove the "LOC" from the gene name
annot_varroa$Locus <- str_replace(annot_varroa$Locus, "LOC", '')
# and change the col name to "genes", so it will the same as in the "overlap" table
colnames(annot_varroa)[which(names(annot_varroa) == "Locus")] <- "genes"
head(annot_varroa)
#now join by "genes" name (INNER JOIN: returns rows when there is a match in both tables)
overlap_annot <- inner_join(overlap, annot_varroa, by = "genes") %>%
dplyr::select(c(genes, module_66, module_57,
IntraModCon_66,
IntraModCon_57,
GS.DWVa_66,
GS.DWVa_57,
GS.VDV2_66,
GS.VDV2_57,
GS.ARV_2_66,
GS.ARV_2_57, Name, Accession, 'Protein product', Length, 'Protein Name'))
# and filter out duplicated genes
overlap_annot <-overlap_annot[!duplicated(overlap_annot[,'genes']),]
# how many genes overlap between Magenta module of the 66 libs, and the Black module of the 57 modules?
nrow(overlap_annot)
write_csv(x = as.data.frame(overlap_annot), "results/overlap_annot.csv")
nrow(overlap)
module_57
geneInfoBlack_57 = data.frame(
module = moduleColors_57,
geneTraitSignificance_57,
geneModuleMembership_57,
IntraModCon = Alldegrees1_57$kWithin) %>%
dplyr::select(c(module, IntraModCon, MMblack, GS.DWVa, GS.VDV2, GS.ARV_2)) %>%
dplyr::filter(module%in% c("black")) %>%
rownames_to_column("genes")
geneInfoBlack_57
geneInfoMagenta_66
nrow(geneInfoBlack_57)
nrow(geneInfoMagenta_66)
#load the former hub-genes:
hub_old <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/data/hub_annot_old.csv", col_names = TRUE, )
hub_old$genes <- as.character(hub_old$genes)
# how many of the hub_old genes exist in the magenta module?
#return all rows from x, and all columns from x and y.
f <- left_join(geneInfoMagenta_66, hub_old, by = "genes")
sum(!is.na(f$virus.x))
# only 3 genes of magenta module appear in the former hubgene. analysis
# so to what module these 53 old-hubgenes belong to?
#make a data.frame of all genes with modules:
all.genes.66 <- data.frame(
module = moduleColors,
geneTraitSignificance_66,
GSPadjust_66,
geneModuleMembership_66,
MMPadjust_66,
IntraModCon = Alldegrees1_66$kWithin) %>%
dplyr::select(c(module, IntraModCon, GS.DWVa, pdj.GS.DWVa, GS.VDV2, pdj.GS.VDV2, GS.ARV_2, pdj.GS.ARV_2, MMpurple, padj.MMpurple, MMpink, padj.MMpink)) %>%
rownames_to_column("genes")
left_join(hub_old, all.genes.66, by = "genes")
all.genes.57 <- data.frame(
module = moduleColors_57,
geneTraitSignificance_57,
GSPadjust_57,
geneModuleMembership_57,
MMPadjust_57,
IntraModCon = Alldegrees1_57$kWithin) %>%
dplyr::select(c(module, IntraModCon, GS.DWVa, pdj.GS.DWVa, GS.VDV2, pdj.GS.VDV2, GS.ARV_2, pdj.GS.ARV_2, MMsalmon, padj.MMsalmon)) %>%
rownames_to_column("genes")
left_join(hub_old, all.genes.57, by = "genes")
# prepare a table describing each gene number, short-name and full annotation, of the silenced genes:
genes <- as.factor(c("111250594", "111244103","111244832", "111248360", "111245345", "111248674", "111251059", "111245371", "111244631", "111252566", "111249664"))
annot <- as.factor(c("Sarcalumenin", "glycerol-3-phosphate dehydrogenase", "Calmodulin", "Cuticle-protein8","Cuticle-protein-14", "Glutamate-receptor-3", "Glutamate-gated-chloride-channel-subunit-beta", "Organic-cation-transporter-protein", "Twitchin", "Annulin", "Defense-protein-Hdd11"))
ShortName <- as.factor(c("Sar", "Gly","clmd", "CuP8", "CuP14", "Glut", "Chl", "Trans", "Twitch", "Anl", "HDD"))
silenced.genes <- data.frame(genes, ShortName, annot)
# to what module the silenced genes belong to?
silenced_overlap.66 <- left_join(silenced.genes, all.genes.66, by = "genes")
silenced_overlap.57 <- left_join(silenced.genes, all.genes.57, by = "genes")
silenced_overlap.66
silenced_overlap.57
