load(file = "/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/results/for_modules.rds")
# Define numbers of genes and samples
nGenes = ncol(for_modules);
nSamples = nrow(for_modules)
# Recalculate MEs with color labels
MEs0 = moduleEigengenes(for_modules, moduleColors)$eigengenes
MEs = orderMEs(MEs0)
# correlate the modules eigengenes (MEs) with the viral load (viruses_load_15)
moduleTraitCor_66 = cor(MEs, viruses_load_15, use = "p") %>%
as.matrix()
moduleTraitPvalue = corPvalueStudent(moduleTraitCor_66, nSamples)
### Controlling the false discovery rate: Benjamini–Hochberg procedure ###
# using p.adjust function, for all comparisons, 15 modules and 15 viruses (m=225).
# first make the p-value matrix into a dataframe
moduleTraitPvalue_0 <- as.data.frame(moduleTraitPvalue)
# then "gather" all the p-values, so they will apear in one column
longer_Pvalue <- moduleTraitPvalue_0 %>%
rownames_to_column("module") %>%
gather("virus", "pvalue", -module)
# now calculate the p.adjust for each p-value
Padjust <- p.adjust(longer_Pvalue$pvalue, method = "fdr")
# and add the column of adjusted pvalues
Padjust <- add_column(longer_Pvalue, Padjust)
# now spread it back
moduleTraitPadjust <- Padjust %>%
dplyr::select(-pvalue) %>%
group_by(virus) %>%
pivot_wider(names_from = virus, values_from = Padjust)
moduleTraitPadjust <- column_to_rownames(moduleTraitPadjust, "module") %>%
as.matrix()
#  Display correlations and their adjusted p-values
textMatrix = paste(signif(moduleTraitCor_66, 2), "\n(",
signif(moduleTraitPadjust, 1), ")", sep = "");
dim(textMatrix) = dim(moduleTraitCor_66)
par(mar = c(6, 8.5, 3, 3));
# Display the correlation values within a heatmap plot
labeledHeatmap(Matrix = moduleTraitCor_66,
xLabels = names(viruses_load_15),
yLabels = names(MEs),
#xLabelsAngle = 90,
ySymbols = names(MEs),
colorLabels = FALSE,
colors = hcl.colors(n = 50, palette = "RdBu", alpha = NULL, rev = FALSE, fixup = TRUE),
invertColors = TRUE,
textMatrix = textMatrix,
setStdMargins = FALSE,
cex.text = 0.7,
zlim = c(-1,1),
main = paste("Varroa Module-viruses relationships"))
# save the matrices for next analyses
#save(moduleTraitCor_66,moduleTraitPadjust_66, file = "/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/results/moduleTraitCor_66.RData")
load("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/results/viruses_load_15.rds")
# change the names of the viruses to match their common name in the literature:
viruses_load_15 <- viruses_load_15 %>%
dplyr::rename("VOV-1" = "VOV_1", "ARV-2"= "ARV_2", "SBV"= "SV", "DWVb"="VDV1/DWVb")
load(file = "/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/results/Varroa_modules_networkConstruction-auto.RData")
load(file = "/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/results/for_modules.rds")
# Define numbers of genes and samples
nGenes = ncol(for_modules);
nSamples = nrow(for_modules)
# Recalculate MEs with color labels
MEs0 = moduleEigengenes(for_modules, moduleColors)$eigengenes
MEs = orderMEs(MEs0)
# names (colors) of the modules
modNames = substring(names(MEs), 3)
# virusNames = substring(names(viruses_load_15), 1)
#make a table of the Module-membership ("MM") of each gene (which is its correlation coefficient, pearson)
geneModuleMembership_66 = as.data.frame(cor(for_modules, MEs, use = "p"));
MMPvalue_66 = as.data.frame(corPvalueStudent(as.matrix(geneModuleMembership_66), nSamples));
### Controlling the false discovery rate: Benjamini–Hochberg procedure ###
# using p.adjust function, for all comparisons, 15 modules and 15 viruses (m=225).
# first make the p-value matrix into a dataframe
MMPvalue_66_0 <- as.data.frame(MMPvalue_66)
# then "gather" all the p-values, so they will appear in one column
longer_Pvalue <- MMPvalue_66_0 %>%
rownames_to_column("module") %>%
gather("virus", "pvalue", -module)
# now calculate the p.adjust for each p-value
Padjust <- p.adjust(longer_Pvalue$pvalue, method = "fdr")
# and add the column of adjusted pvalues
Padjust <- add_column(longer_Pvalue, Padjust)
# now spread it back
MMPadjust_66 <- Padjust %>%
dplyr::select(-pvalue) %>%
group_by(virus) %>%
pivot_wider(names_from = virus, values_from = Padjust)
MMPadjust_66 <- column_to_rownames(MMPadjust_66, "module")
#change the name of the columns to start with "MM" then the module name
names(geneModuleMembership_66) = paste("MM", modNames, sep="")
names(MMPadjust_66) = paste("padj.MM", modNames, sep="")
# We begin by calculating the intramodular connectivity for each gene. (In network literature, connectivity is often referred to as ”degree”.) The function intramodularConnectivity computes the whole network connectivity kTotal, the within module connectivity kWithin, kOut=kTotal-kWithin, and kDiff=kIn-kOut=2*kIN-kTotal
# calculate the correlation between each pair of genes
ADJ1_66 <- abs(cor(for_modules,use="p"))^6
# compute the different degrees of connectivity:
Alldegrees1_66 <- intramodularConnectivity(ADJ1_66, moduleColors)
head(Alldegrees1_66)
#save it
#save(Alldegrees1_66, file = "/results/IntraModCon66.RData")
# load the
annot.vd <- read.csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/data/VdesGOready2.csv")
#Preparing the GO frame
annot.vd2 <- annot.vd %>%
mutate(evidence = "IEA") %>%
dplyr::select(go_id = GO.ids, evidence, gene = Gene.id)
head(annot.vd2)
goFrame.vd <-GOFrame(annot.vd2, organism = "Vd")
goAllFrame.vd <-GOAllFrame(goFrame.vd)
gsc.vd <-GeneSetCollection(goAllFrame.vd, setType = GOCollection())
#Preparing the universe
universe.vd <- as.character(unique(annot.vd2$gene)) # there's a wired thing in the GSEAGOHyperGParams function, sometimes its required the universe to be "character".
head(universe.vd)
# Preparing the gene set (list of genes in a module)
# change "black" to the name of the desired module, in the first line: [moduleColors=="black"], and in the final "write.csv(file = "GO_term_enrichment_**salmon**BP.csv")
ME <- names(for_modules)[moduleColors=="black"]
ME_df <- data.frame(gene = ME)
genes.vd <- unique(ME_df$gene)
head(genes.vd)
params.vd <- GSEAGOHyperGParams(name = "Vd_GO_enrichment",
geneSetCollection = gsc.vd,
geneIds = genes.vd,
universeGeneIds = universe.vd,
ontology = "BP", # change with MF, CC to test all
pvalueCutoff = 0.05,
conditional = F,
testDirection = "over")
over.vd <- hyperGTest(params.vd)
over.vd
#summary(over.vd)
GO_enrich.vd <- as.data.frame(summary(over.vd)) %>%
arrange(Pvalue)
# write.csv(GO_enrich.vd, file = "/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/results/GO_term_black.csv")
View(Alldegrees1_66)
#save it
save(Alldegrees1_66, file = "/results/IntraModCon66.RData")
#save it
save(Alldegrees1_66, file = "/results/IntraModCon66.rds")
library("dplyr")
library("tidyverse")
library("vegan")
library("DESeq2")
library("ggfortify")
library("WGCNA")
options(stringsAsFactors = FALSE) # Allow multi-threading within WGCNA. This helps speed up certain calculations.
library("rmarkdown")
library("knitr") # for the markdown
library("kableExtra") # for creating a scrolling table
library("ggplot2") # for plotting
library("ape") # for mantel.test
library("Biostrings")
library("ggrepel") # for spreading text labels on the plot
library("scales") # for axis labels notation
library("GO.db") # for GO term annotation
library("reshape2")
library("RSQLite")
library("AnnotationDbi") # for GO term annotation
library("GSEABase")
library("GOstats")
library("maps") # for the map background
library("htmltools")
library("rgdal")
library("grid")
library("gridExtra")
library("GeneOverlap") # for making the overlapping genes
library("cluster")
library("rmdformats")
library("corrplot") # for virus-virus correlation
library("viridis")
library("hrbrthemes")
library("ggthemes")
library("RColorBrewer")
library("naniar")
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks") #set the directory as the local GitHub local repository
#save it
save(Alldegrees1_66, file = "/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/results/IntraModCon66.rds")
View(ADJ1_66)
hub_genes <- data.frame(
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66,
geneTraitSignificance_66,
GSPadjust_66
hub_genes <- data.frame(
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66,
geneTraitSignificance_66,
GSPadjust_66)
data.frame(
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66,
geneTraitSignificance_66,
GSPadjust_66)
load("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/results/viruses_load_15.rds")
# change the names of the viruses to match their common name in the literature:
viruses_load_15 <- viruses_load_15 %>%
dplyr::rename("VOV-1" = "VOV_1", "ARV-2"= "ARV_2", "SBV"= "SV", "DWVb"="VDV1/DWVb")
load(file = "/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/results/Varroa_modules_networkConstruction-auto.RData")
load(file = "/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/results/for_modules.rds")
# Define numbers of genes and samples
nGenes = ncol(for_modules);
nSamples = nrow(for_modules)
# Recalculate MEs with color labels
MEs0 = moduleEigengenes(for_modules, moduleColors)$eigengenes
MEs = orderMEs(MEs0)
# make a table with the Trait-significance ("GS") for each gene (which is its correlation coefficient, pearson)
geneTraitSignificance_66 = as.data.frame(cor(for_modules, viruses_load_15, use = "p"));
GSPvalue_66 = as.data.frame(corPvalueStudent(as.matrix(geneTraitSignificance_66), nSamples));
### Controlling the false discovery rate: Benjamini–Hochberg procedure ###
# using p.adjust function, for all comparisons, 15 modules and 15 viruses (m=225).
# first make the p-value matrix into a dataframe
GSPvalue_66_0 <- as.data.frame(GSPvalue_66)
# then "gather" all the p-values, so they will apear in one column
longer_Pvalue <- GSPvalue_66_0 %>%
rownames_to_column("module") %>%
gather("virus", "pvalue", -module)
# now calculate the p.adjust for each p-value
Padjust <- p.adjust(longer_Pvalue$pvalue, method = "fdr")
# and add the column of adjusted pvalues
Padjust <- add_column(longer_Pvalue, Padjust)
# now spread it back
GSPadjust_66 <- Padjust %>%
dplyr::select(-pvalue) %>%
group_by(virus) %>%
pivot_wider(names_from = virus, values_from = Padjust)
GSPadjust_66 <- column_to_rownames(GSPadjust_66, "module")
#rename the col names by adding the initial "GS." for genesignificance, and "p.GS." for p-value.
names(geneTraitSignificance_66) = paste("GS.", names(viruses_load_15), sep="");
names(GSPadjust_66) = paste("pdj.GS.", names(viruses_load_15), sep="");
# names (colors) of the modules
modNames = substring(names(MEs), 3)
# virusNames = substring(names(viruses_load_15), 1)
#make a table of the Module-membership ("MM") of each gene (which is its correlation coefficient, pearson)
geneModuleMembership_66 = as.data.frame(cor(for_modules, MEs, use = "p"));
MMPvalue_66 = as.data.frame(corPvalueStudent(as.matrix(geneModuleMembership_66), nSamples));
### Controlling the false discovery rate: Benjamini–Hochberg procedure ###
# using p.adjust function, for all comparisons, 15 modules and 15 viruses (m=225).
# first make the p-value matrix into a dataframe
MMPvalue_66_0 <- as.data.frame(MMPvalue_66)
# then "gather" all the p-values, so they will appear in one column
longer_Pvalue <- MMPvalue_66_0 %>%
rownames_to_column("module") %>%
gather("virus", "pvalue", -module)
# now calculate the p.adjust for each p-value
Padjust <- p.adjust(longer_Pvalue$pvalue, method = "fdr")
# and add the column of adjusted pvalues
Padjust <- add_column(longer_Pvalue, Padjust)
# now spread it back
MMPadjust_66 <- Padjust %>%
dplyr::select(-pvalue) %>%
group_by(virus) %>%
pivot_wider(names_from = virus, values_from = Padjust)
MMPadjust_66 <- column_to_rownames(MMPadjust_66, "module")
#change the name of the columns to start with "MM" then the module name
names(geneModuleMembership_66) = paste("MM", modNames, sep="")
names(MMPadjust_66) = paste("padj.MM", modNames, sep="")
hub_genes <- data.frame(
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66,
geneTraitSignificance_66,
GSPadjust_66)
View(hub_genes)
hub_genes <- data.frame(
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66$kWithin,
geneTraitSignificance_66,
GSPadjust_66)
moduleColors
# First, we gonna choose the interesting modules,
# Nine modules have significant interactions with the viral load, of at least one virus: 1, 3, 13, 5, 10, 6, 9, 14 and 7.
# of these modules, four have relevant GO-terms: 3, 6, 9 and 10.
# so, we gonna make a table with the gene, its module, MM, kWithin, GS, gene annotation
moduleNumbers <- c(0:15)
moduleNumbers
# First, we gonna choose the interesting modules,
# Nine modules have significant interactions with the viral load, of at least one virus: 1, 3, 13, 5, 10, 6, 9, 14 and 7.
# of these modules, four have relevant GO-terms: 3, 6, 9 and 10.
# so, we gonna make a table with the gene, its module, MM, kWithin, GS, gene annotation
moduleNumbers <- as.character(c(0:15))
moduleNumbers
moduleCol <- as.character(c("grey", "turquoise", "blue", "brown", "yellow", "green", "red","black", "pink", "magenta", "purple", "greenyellow", "tan","salmon", "cyan","midnightblue"))
moduleCol_Num <- data.frame(moduleNum, moduleNum)
# First, we gonna choose the interesting modules,
# Nine modules have significant interactions with the viral load, of at least one virus: 1, 3, 13, 5, 10, 6, 9, 14 and 7.
# of these modules, four have relevant GO-terms: 3, 6, 9 and 10.
# so, we gonna make a table with the gene, its module, MM, kWithin, GS, gene annotation
moduleNum <- as.character(c(0:15))
moduleColr <- as.character(c("grey", "turquoise", "blue", "brown", "yellow", "green", "red","black", "pink", "magenta", "purple", "greenyellow", "tan","salmon", "cyan","midnightblue"))
moduleCol_Num <- data.frame(moduleNum, moduleNum)
moduleCol_Num
moduleCol_Num <- data.frame(moduleNum, moduleColr)
moduleCol_Num
hub_genes
moduleCol_Num
moduleCol_Num$moduleNum
#lets add the modules' numbers
moduleNum <- as.character(c(0:15))
moduleCol <- as.character(c("grey", "turquoise", "blue", "brown", "yellow", "green", "red","black", "pink", "magenta", "purple", "greenyellow", "tan","salmon", "cyan","midnightblue"))
moduleCol_Num <- data.frame(moduleNum, moduleCol)
hub_genes <- left_join(hub_genes, moduleCol_Num, by =  moduleCol)
hub_genes <- left_join(moduleCol_Num, hub_genes, by =  moduleCol)
View(moduleCol_Num)
hub_genes <- data.frame(
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66$kWithin,
geneTraitSignificance_66,
GSPadjust_66) %>%
dplyr::select(c(moduleCol, MMpurple, padj.MMpurple, MMmagenta, padj.MMmagenta, MMred, padj.MMred, MMbrown, padj.MMbrown, Alldegrees1_66.kWithin, GS.DWVa, pdj.GS.DWVa, GS.ARV.2, pdj.GS.ARV.2, GS.VDV2, pdj.GS.VDV2)) %>%
dplyr::filter(moduleCol == c("purple", "magenta", "red", "brown")) %>%
dplyr::rename(kWithin = Alldegrees1_66.kWithin)
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66$kWithin,
geneTraitSignificance_66,
GSPadjust_66) %>%
dplyr::select(c(moduleCol, MMpurple, padj.MMpurple, MMmagenta, padj.MMmagenta, MMred, padj.MMred, MMbrown, padj.MMbrown, Alldegrees1_66.kWithin, GS.DWVa, pdj.GS.DWVa, GS.ARV.2, pdj.GS.ARV.2, GS.VDV2, pdj.GS.VDV2)) %>%
dplyr::filter(moduleCol = c("purple", "magenta", "red", "brown")) %>%
dplyr::rename(kWithin = Alldegrees1_66.kWithin)
hub_genes
hub_genes <- data.frame(
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66$kWithin,
geneTraitSignificance_66,
GSPadjust_66) %>%
dplyr::select(c(moduleCol, MMpurple, padj.MMpurple, MMmagenta, padj.MMmagenta, MMred, padj.MMred, MMbrown, padj.MMbrown, Alldegrees1_66.kWithin, GS.DWVa, pdj.GS.DWVa, GS.ARV.2, pdj.GS.ARV.2, GS.VDV2, pdj.GS.VDV2)) %>%
dplyr::filter(moduleCol = c("purple", "magenta", "red", "brown")) %>%
dplyr::rename(kWithin = Alldegrees1_66.kWithin)
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66$kWithin,
geneTraitSignificance_66,
GSPadjust_66) %>%
dplyr::select(c(moduleCol, MMpurple, padj.MMpurple, MMmagenta, padj.MMmagenta, MMred, padj.MMred, MMbrown, padj.MMbrown, Alldegrees1_66.kWithin, GS.DWVa, pdj.GS.DWVa, GS.ARV.2, pdj.GS.ARV.2, GS.VDV2, pdj.GS.VDV2)) %>%
dplyr::filter(moduleCol %in% c("purple", "magenta", "red", "brown")) %>%
dplyr::rename(kWithin = Alldegrees1_66.kWithin)
hub_genes <- data.frame(
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66$kWithin,
geneTraitSignificance_66,
GSPadjust_66)
hub_genes <- data.frame(
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66$kWithin,
geneTraitSignificance_66,
GSPadjust_66) %>%
dplyr::select(c(moduleCol, MMpurple, padj.MMpurple, MMmagenta, padj.MMmagenta, MMred, padj.MMred, MMbrown, padj.MMbrown, Alldegrees1_66.kWithin, GS.DWVa, pdj.GS.DWVa, GS.ARV.2, pdj.GS.ARV.2, GS.VDV2, pdj.GS.VDV2))
hub_genes <- data.frame(
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66$kWithin,
geneTraitSignificance_66,
GSPadjust_66) %>%
dplyr::select(c(moduleCol, MMpurple, padj.MMpurple, MMmagenta, padj.MMmagenta, MMred, padj.MMred, MMbrown, padj.MMbrown, Alldegrees1_66.kWithin, GS.DWVa, pdj.GS.DWVa, GS.ARV.2, pdj.GS.ARV.2, GS.VDV2, pdj.GS.VDV2)) %>%
dplyr::filter(moduleCol %in% c("purple", "magenta", "red", "brown"))
hub_genes <- data.frame(
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66$kWithin,
geneTraitSignificance_66,
GSPadjust_66) %>%
dplyr::select(c(moduleCol, MMpurple, padj.MMpurple, MMmagenta, padj.MMmagenta, MMred, padj.MMred, MMbrown, padj.MMbrown, Alldegrees1_66.kWithin, GS.DWVa, pdj.GS.DWVa, GS.ARV.2, pdj.GS.ARV.2, GS.VDV2, pdj.GS.VDV2)) %>%
dplyr::filter(moduleCol %in% c("purple", "magenta", "red", "brown")) %>%
dplyr::rename(kWithin = Alldegrees1_66.kWithin)
hub_genes_0 <- data.frame(
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66$kWithin,
geneTraitSignificance_66,
GSPadjust_66) %>%
dplyr::select(c(moduleCol, MMpurple, padj.MMpurple, MMmagenta, padj.MMmagenta, MMred, padj.MMred, MMbrown, padj.MMbrown, Alldegrees1_66.kWithin, GS.DWVa, pdj.GS.DWVa, GS.ARV.2, pdj.GS.ARV.2, GS.VDV2, pdj.GS.VDV2)) %>%
dplyr::filter(moduleCol %in% c("purple", "magenta", "red", "brown")) %>%
dplyr::rename(kWithin = Alldegrees1_66.kWithin)
#lets add the modules' numbers
moduleNum <- as.character(c(0:15))
moduleCol <- as.character(c("grey", "turquoise", "blue", "brown", "yellow", "green", "red","black", "pink", "magenta", "purple", "greenyellow", "tan","salmon", "cyan","midnightblue"))
moduleCol_Num <- data.frame(moduleNum, moduleCol)
hub_genes <- left_join(moduleCol_Num, hub_genes_0, by =  moduleCol)
moduleCol_Num
hub_genes
hub_genes <- left_join(moduleCol_Num, hub_genes_0, by =  "moduleCol")
hub_genes <- left_join(moduleCol_Num, hub_genes_0, by =  "moduleCol") %>%
na.omit()
# add gene annotation:
# load the annotation file:
annot_varroa <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/data/annot_varroa.csv", col_names = TRUE, )
# remove the "LOC" from the gene name
annot_varroa$Locus <- str_replace(annot_varroa$Locus, "LOC", '')
# change the col name to "genes", so it will the same as in the "overlap" table
colnames(annot_varroa)[which(names(annot_varroa) == "Locus")] <- "genes"
head(annot_varroa)
hub_genes <- left_join(moduleCol_Num, hub_genes_0, by =  "moduleCol") %>%
na.omit() %>%
rownames_to_column("genes")
hub_genes_0 <- data.frame(
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66$kWithin,
geneTraitSignificance_66,
GSPadjust_66) %>%
dplyr::select(c(moduleCol, MMpurple, padj.MMpurple, MMmagenta, padj.MMmagenta, MMred, padj.MMred, MMbrown, padj.MMbrown, Alldegrees1_66.kWithin, GS.DWVa, pdj.GS.DWVa, GS.ARV.2, pdj.GS.ARV.2, GS.VDV2, pdj.GS.VDV2)) %>%
dplyr::filter(moduleCol %in% c("purple", "magenta", "red", "brown")) %>%
dplyr::rename(kWithin = Alldegrees1_66.kWithin)
View(hub_genes_0)
hub_genes_0 <- data.frame(
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66$kWithin,
geneTraitSignificance_66,
GSPadjust_66) %>%
dplyr::select(c(moduleCol, MMpurple, padj.MMpurple, MMmagenta, padj.MMmagenta, MMred, padj.MMred, MMbrown, padj.MMbrown, Alldegrees1_66.kWithin, GS.DWVa, pdj.GS.DWVa, GS.ARV.2, pdj.GS.ARV.2, GS.VDV2, pdj.GS.VDV2)) %>%
dplyr::filter(moduleCol %in% c("purple", "magenta", "red", "brown")) %>%
dplyr::rename(kWithin = Alldegrees1_66.kWithin) %>%
rownames_to_column("genes")
# add the modules' numbers
moduleNum <- as.character(c(0:15))
moduleCol <- as.character(c("grey", "turquoise", "blue", "brown", "yellow", "green", "red","black", "pink", "magenta", "purple", "greenyellow", "tan","salmon", "cyan","midnightblue"))
moduleCol_Num <- data.frame(moduleNum, moduleCol)
hub_genes <- left_join(moduleCol_Num, hub_genes_0, by =  "moduleCol") %>%
na.omit()
# add gene annotation:
# load the annotation file:
annot_varroa <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/data/annot_varroa.csv", col_names = TRUE, )
# remove the "LOC" from the gene name
annot_varroa$Locus <- str_replace(annot_varroa$Locus, "LOC", '')
# change the col name to "genes", so it will the same as in the "overlap" table
colnames(annot_varroa)[which(names(annot_varroa) == "Locus")] <- "genes"
head(annot_varroa)
hub_genes <- left_join(annot_varroa, hub_genes, by = "genes")
hub_genes <- left_join(annot_varroa, hub_genes, by = "genes") %>%
na.omit()
# add gene annotation:
# load the annotation file:
annot_varroa <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/data/annot_varroa.csv", col_names = TRUE)
# add gene annotation:
# load the annotation file:
annot_varroa <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/data/annot_varroa.csv",
col_types = cols_only("Protein Name" = col_character(),
"Accession" = col_character()))
annot_varroa
annot_varroa <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/data/annot_varroa.csv", col_names = TRUE)
annot_varroa
View(annot_varroa)
# add gene annotation:
# load the annotation file:
annot_varroa <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/data/annot_varroa.csv",
col_types = cols_only("Protein Name" = col_character(),
"Accession" = col_character(),
"GeneID" = col_character())) %>%
dplyr::rename(genes = GeneID)
head(annot_varroa)
hub_genes_0 <- data.frame(
moduleCol = moduleColors,
geneModuleMembership_66,
MMPadjust_66,
Alldegrees1_66$kWithin,
geneTraitSignificance_66,
GSPadjust_66) %>%
dplyr::select(c(moduleCol, MMpurple, padj.MMpurple, MMmagenta, padj.MMmagenta, MMred, padj.MMred, MMbrown, padj.MMbrown, Alldegrees1_66.kWithin, GS.DWVa, pdj.GS.DWVa, GS.ARV.2, pdj.GS.ARV.2, GS.VDV2, pdj.GS.VDV2)) %>%
dplyr::filter(moduleCol %in% c("purple", "magenta", "red", "brown")) %>%
dplyr::rename(kWithin = Alldegrees1_66.kWithin) %>%
rownames_to_column("genes")
# add the modules' numbers
moduleNum <- as.character(c(0:15))
moduleCol <- as.character(c("grey", "turquoise", "blue", "brown", "yellow", "green", "red","black", "pink", "magenta", "purple", "greenyellow", "tan","salmon", "cyan","midnightblue"))
moduleCol_Num <- data.frame(moduleNum, moduleCol)
hub_genes_1 <- left_join(moduleCol_Num, hub_genes_0, by =  "moduleCol") %>%
na.omit()
# add gene annotation:
# load the annotation file:
annot_varroa <- read_csv("/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/data/annot_varroa.csv",
col_types = cols_only("Protein Name" = col_character(), "Accession" = col_character(), "GeneID" = col_character())) %>%
dplyr::rename(genes = GeneID)
head(annot_varroa)
hub_genes <- left_join(annot_varroa, hub_genes_1, by = "genes") %>%
na.omit() %>%
dplyr::select("genes", "moduleNum", "MMpurple", "padj.MMpurple", "Accession", "Protein Name") %>%
# save the final table of the genes in module 10
write_csv(genesModule.10, "/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/results/genesModule.10.csv")
hub_genes <- left_join(annot_varroa, hub_genes_1, by = "genes") %>%
na.omit() %>%
dplyr::select("genes", "moduleNum", "MMpurple", "padj.MMpurple", "Accession", "Protein Name")
hub_genes <- left_join(annot_varroa, hub_genes_1, by = "genes") %>%
na.omit() %>%
dplyr::select(c(genes, moduleCol, moduleNum, Accession, "Protein Name", MMpurple, padj.MMpurple, MMmagenta, padj.MMmagenta, MMred, padj.MMred, MMbrown, padj.MMbrown, Alldegrees1_66.kWithin, GS.DWVa, pdj.GS.DWVa, GS.ARV.2, pdj.GS.ARV.2, GS.VDV2, pdj.GS.VDV2))
hub_genes <- left_join(annot_varroa, hub_genes_1, by = "genes") %>%
na.omit() %>%
dplyr::select(c(genes, moduleCol, moduleNum, Accession, "Protein Name", kWithin, MMpurple, padj.MMpurple, MMmagenta, padj.MMmagenta, MMred, padj.MMred, MMbrown, padj.MMbrown, GS.DWVa, pdj.GS.DWVa, GS.ARV.2, pdj.GS.ARV.2, GS.VDV2, pdj.GS.VDV2))
# save the final table of the genes in modules 3, 6, 9 and 10
write_csv(hub_genes, "/Users/nuriteliash/Documents/GitHub/varroa-virus-networks/results/hub_genes.csv")
